/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pos;

import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Samee
 */
public class product extends javax.swing.JFrame {

    /**
     * Creates new form catagorie
     */
    public product() {
        initComponents();
        update_table();
        category();
        brand();
        vendor();
    }
    
    Connection con1;
    PreparedStatement pst;

    public class categoryItem {
        int id;
        String name;
        
        public categoryItem(int id, String name){
            this.id = id;
            this.name = name;
        }
        public String toString(){
            return this.name;
        }
    }
    
    public class brandItem {
        int id;
        String name;
        
        public brandItem(int id, String name){
            this.id = id;
            this.name = name;
        }
        public String toString(){
            return this.name;
        }
    }
    
    public class vendorItem {
        int id;
        String name;
        
        public vendorItem(int id, String name){
            this.id = id;
            this.name = name;
        }
        public String toString(){
            return this.name;
        }
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    
    private void category(){
        try {
                Class.forName("com.mysql.jdbc.Driver");
                con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "");
                pst = con1.prepareStatement("select * from category");
                
                ResultSet rs = pst.executeQuery();
                
                while(rs.next()){
                    txtcategory.addItem(new categoryItem(rs.getInt(1), rs.getString(2)));
                }
                
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                }
    }
    
    private void brand(){
        try {
                Class.forName("com.mysql.jdbc.Driver");
                con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "");
                pst = con1.prepareStatement("select * from brand");
                
                ResultSet rs = pst.executeQuery();
                
                while(rs.next()){
                    txtbrand.addItem(new brandItem(rs.getInt(1), rs.getString(2)));
                }
                
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                }
    }
    
    private void  vendor(){
        try {
                Class.forName("com.mysql.jdbc.Driver");
                con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "");
                pst = con1.prepareStatement("select * from vendor");
                
                ResultSet rs = pst.executeQuery();
                
                while(rs.next()){
                    txtvendor.addItem(new vendorItem(rs.getInt(1), rs.getString(2)));
                }
                
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                }
    }
    
    
    private void update_table(){
        int c;
        try {
                Class.forName("com.mysql.jdbc.Driver");
                con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "");
                pst = con1.prepareStatement("select * from product");
                
                ResultSet rs = pst.executeQuery();
                
                ResultSetMetaData rsd = rs.getMetaData();
                c = rsd.getColumnCount();
                
                DefaultTableModel d = (DefaultTableModel)jTable1.getModel();
                d.setRowCount(0);
                
                while(rs.next()){
                    Vector v2 = new Vector();
                    for( int i=1 ;i<=c; i++){
                        v2.add(rs.getString("id"));
                        v2.add(rs.getString("product"));
                        v2.add(rs.getString("description"));
                        v2.add(rs.getString("cat_id"));
                        v2.add(rs.getString("brand_id"));
                        v2.add(rs.getString("cost_price"));
                        v2.add(rs.getString("retail_price"));
                        v2.add(rs.getString("vendor_id"));
                        v2.add(rs.getString("qty"));
                        v2.add(rs.getString("barcode"));
                        v2.add(rs.getString("status"));
                    }
                    d.addRow(v2);
                    
                }
                
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtproduct = new javax.swing.JTextField();
        txtstatus = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtdescription = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        txtcategory = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtbrand = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        txtcost = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtprice = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtvendor = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        txtquantity = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtbar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Menu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(51, 51, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Category");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Vendor");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Brand");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Product");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("POS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(263, 263, 263)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(394, Short.MAX_VALUE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Product", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel6.setText("Product:");

        jLabel7.setText("Status");

        txtproduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproductActionPerformed(evt);
            }
        });

        txtstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Deactive" }));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pos/img/save.png"))); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pos/img/update.png"))); // NOI18N
        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pos/img/delete.png"))); // NOI18N
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pos/img/refresh.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setText("Description:");

        txtdescription.setColumns(20);
        txtdescription.setRows(5);
        jScrollPane2.setViewportView(txtdescription);

        jLabel9.setText("Category:");

        jLabel10.setText("Brand:");

        txtbrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbrandActionPerformed(evt);
            }
        });

        jLabel11.setText("Cost price: ");

        txtcost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcostActionPerformed(evt);
            }
        });

        jLabel12.setText("Retail price: ");

        txtprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpriceActionPerformed(evt);
            }
        });

        jLabel13.setText("Vendor: ");

        jLabel14.setText("Quantity: ");

        txtquantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtquantityActionPerformed(evt);
            }
        });

        jLabel15.setText("Bar Code: ");

        txtbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtcategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtproduct, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtbrand, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                    .addComponent(txtcost))
                .addGap(77, 77, 77)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel7)
                    .addComponent(jButton3))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButton2)
                        .addGap(53, 53, 53)
                        .addComponent(jButton1))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtstatus, 0, 295, Short.MAX_VALUE)
                            .addComponent(txtquantity)
                            .addComponent(txtprice)
                            .addComponent(txtvendor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtbar))))
                .addGap(210, 210, 210))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtproduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtvendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtquantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(txtstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton2)
                            .addComponent(jButton1))
                        .addGap(14, 14, 14)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(txtbrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtcost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(89, 89, 89))))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Product", "Description", "Category", "Brand", "Cost ", "Retaill price", "Vendor", "Quantity", "Barcode", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setText("Product");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel5)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Add button
        String product = txtproduct.getText();
        String description = txtdescription.getText();
        categoryItem category = (categoryItem)txtcategory.getSelectedItem();
        brandItem brand = (brandItem)txtbrand.getSelectedItem();
        int cost=-1, price=-1, quantity=-1, bar=-1;
        vendorItem vendor = (vendorItem)txtvendor.getSelectedItem();
        String status = txtstatus.getSelectedItem().toString();
        if (!product.isEmpty()){
            String regex = "^[a-zA-Z0-9\\s]+$";
            Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(product);
            boolean matches = matcher.matches();
            if (!description.isEmpty()){
            
                if (!(category.id < 0)) {
                    if (!(brand.id < 0)) {
                        try {
                            cost = Integer.parseInt(txtcost.getText());
                            price = Integer.parseInt(txtprice.getText());
                            quantity = Integer.parseInt(txtquantity.getText());
                            bar = Integer.parseInt(txtbar.getText());
                        if (cost >= 0 && cost <= 100000) {
                            if (price >=0 && price <= 1000000) {
                                if (!(brand.id < 0)) {
                                    if (quantity >=0 && quantity <=10000) {
                                        
                                        if (matches) {
                                            try {
                                            Class.forName("com.mysql.jdbc.Driver");
                                            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "");
                                            pst = con1.prepareStatement("insert into product (product, description, cat_id, brand_id, cost_price,retail_price,vendor_id,qty,barcode,status)values(?,?,?,?,?,?,?,?,?,?) ");
                                            pst.setString(1, product);
                                            pst.setString(2, description);
                                            pst.setInt(3, category.id);
                                            pst.setInt(4, brand.id);
                                            pst.setInt(5, cost);
                                            pst.setInt(6, price);
                                            pst.setInt(7, vendor.id);
                                            pst.setInt(8, quantity);
                                            pst.setInt(9, bar);
                                            pst.setString(10, status);

                                            pst.executeUpdate();
                                            JOptionPane.showMessageDialog(null, "Product Added Successfully!");
                                            update_table();
                                            txtproduct.setText("");
                                            txtdescription.setText("");
                                            txtcategory.setSelectedIndex(0);
                                            txtbrand.setSelectedIndex(0);
                                            txtcost.setText("");
                                            txtprice.setText("");
                                            txtvendor.setSelectedIndex(0);
                                            txtquantity.setText("");
                                            txtbar.setText("");
                                            txtstatus.setSelectedIndex(0);
                                            txtproduct.requestFocus();

                                            } catch (ClassNotFoundException ex) {
                                                Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                                            } catch (SQLException ex) {
                                                Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                                            } 
                                        } 
                                        else {
                                            JOptionPane.showMessageDialog(null, "ERROR! Special Characters are not allowed in category name!");            }    
                                    } else {
                                        JOptionPane.showMessageDialog(null, "ERROR! Quantity should be in a range of 0 to 10000");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "ERROR! Add a Vendor first");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "ERROR! price should be in a range of 0 to 1000000");
                            }
                        } else{
                            JOptionPane.showMessageDialog(null, "ERROR! Cost should be in a range of 0 to 100000");
                        }
                    
                        }  catch (NumberFormatException ex){
                            JOptionPane.showMessageDialog(null, "ERROR! cost, quantity, and bar should be an integer");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "ERROR! Add a Brand first");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "ERROR! Add a Category first");
                }
            } else {
            JOptionPane.showMessageDialog(null, "ERROR! Description Cannot be Empty");
        }
        }
        else{
            JOptionPane.showMessageDialog(null, "ERROR! product field can not be Empty.");
        }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Code to edit data in Category
        
        DefaultTableModel d1 = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        if (selectedIndex != -1){
            int id = Integer.parseInt(d1.getValueAt((selectedIndex), 0).toString());
        String product = txtproduct.getText();
        String description = txtdescription.getText();
        categoryItem category = (categoryItem)txtcategory.getSelectedItem();
        brandItem brand = (brandItem)txtbrand.getSelectedItem();
        int cost=-1, price=-1, quantity=-1, bar=-1;
        vendorItem vendor = (vendorItem)txtvendor.getSelectedItem();
        String status = txtstatus.getSelectedItem().toString();
        if (!product.isEmpty()){
            String regex = "^[a-zA-Z0-9\\s]+$";
            Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(product);
            boolean matches = matcher.matches();
            if (!description.isEmpty()){
            
                if (!(category.id < 0)) {
                    if (!(brand.id < 0)) {
                        try {
                            cost = Integer.parseInt(txtcost.getText());
                            price = Integer.parseInt(txtprice.getText());
                            quantity = Integer.parseInt(txtquantity.getText());
                            bar = Integer.parseInt(txtbar.getText());
                        if (cost >= 0 && cost <= 100000) {
                            if (price >=0 && price <= 1000000) {
                                if (!(brand.id < 0)) {
                                    if (quantity >=0 && quantity <=10000) {
                                        
                                        if (matches) {
                                            try {
                                            Class.forName("com.mysql.jdbc.Driver");
                                            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "");
                                            pst = con1.prepareStatement("update category set category=?,status=? where id =?");
                                            pst = con1.prepareStatement("update product set product=?, description=?, cat_id=?, brand_id=?, cost_price=?,retail_price=?,vendor_id=?,qty=?,barcode=?,status=? where id=?");
                                            pst.setString(1, product);
                                            pst.setString(2, description);
                                            pst.setInt(3, category.id);
                                            pst.setInt(4, brand.id);
                                            pst.setInt(5, cost);
                                            pst.setInt(6, price);
                                            pst.setInt(7, vendor.id);
                                            pst.setInt(8, quantity);
                                            pst.setInt(9, bar);
                                            pst.setString(10, status);
                                            pst.setInt(11, id);

                                            pst.executeUpdate();
                                            JOptionPane.showMessageDialog(null, "Product Updated Successfully!");
                                            update_table();
                                            txtproduct.setText("");
                                            txtdescription.setText("");
                                            txtcategory.setSelectedIndex(0);
                                            txtbrand.setSelectedIndex(0);
                                            txtcost.setText("");
                                            txtprice.setText("");
                                            txtvendor.setSelectedIndex(0);
                                            txtquantity.setText("");
                                            txtbar.setText("");
                                            txtstatus.setSelectedIndex(0);
                                            txtproduct.requestFocus();

                                            } catch (ClassNotFoundException ex) {
                                                Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                                            } catch (SQLException ex) {
                                                Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                                            } 
                                        } 
                                        else {
                                            JOptionPane.showMessageDialog(null, "ERROR! Special Characters are not allowed in category name!");            }    
                                    } else {
                                        JOptionPane.showMessageDialog(null, "ERROR! Quantity should be in a range of 0 to 10000");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "ERROR! Add a Vendor first");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "ERROR! price should be in a range of 0 to 1000000");
                            }
                        } else{
                            JOptionPane.showMessageDialog(null, "ERROR! Cost should be in a range of 0 to 100000");
                        }
                    
                        }  catch (NumberFormatException ex){
                            JOptionPane.showMessageDialog(null, "ERROR! cost, quantity, and bar should be an integer");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "ERROR! Add a Brand first");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "ERROR! Add a Category first");
                }
            } else {
            JOptionPane.showMessageDialog(null, "ERROR! Description Cannot be Empty");
        }
        }
        else{
            JOptionPane.showMessageDialog(null, "ERROR! product field can not be Empty.");
        }
        }
        else {
            JOptionPane.showMessageDialog(null, "Error! select a Row to edit");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // Selects the row when clicked through mouse
        DefaultTableModel d1 = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        txtproduct.setText(d1.getValueAt(selectedIndex, 1).toString());
        txtdescription.setText(d1.getValueAt(selectedIndex,2).toString());
        txtcategory.setSelectedItem(d1.getValueAt(selectedIndex,3).toString());
        txtbrand.setSelectedItem(d1.getValueAt(selectedIndex,4).toString());
        txtcost.setText(d1.getValueAt(selectedIndex,5).toString());
        txtprice.setText(d1.getValueAt(selectedIndex,6).toString());
        txtvendor.setSelectedItem(d1.getValueAt(selectedIndex,7).toString());
        txtquantity.setText(d1.getValueAt(selectedIndex,8).toString());
        txtbar.setText(d1.getValueAt(selectedIndex,9).toString());
        txtstatus.setSelectedItem(d1.getValueAt(selectedIndex,10).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // To delete a category
        
        DefaultTableModel d1 = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        

        if (selectedIndex != -1){
        // TO CONFIRM IF WANT TO DELETE OR NOT
        int id = Integer.parseInt(d1.getValueAt((selectedIndex), 0).toString());
        int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete category?", "Warning", JOptionPane.YES_NO_OPTION);
        
        //IF YES THE RUN DELETE QUERY
        if(dialogResult == JOptionPane.YES_OPTION){
            try {
                Class.forName("com.mysql.jdbc.Driver");
                con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "");
                pst = con1.prepareStatement("delete from product where id= ?");
                pst.setInt(1, id);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Product Deleted Successfully!");
                update_table();
                txtproduct.setText("");
                txtdescription.setText("");
                txtcategory.setSelectedIndex(0);
                txtbrand.setSelectedIndex(0);
                txtcost.setText("");
                txtprice.setText("");
                txtvendor.setSelectedIndex(0);
                txtquantity.setText("");
                txtbar.setText("");
                txtstatus.setSelectedIndex(0);
                txtproduct.requestFocus();

                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        }
        else {
            JOptionPane.showMessageDialog(null, "Error! select a Row to delete");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtproductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtproductActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Refresh the whole panel
        
        update_table();
        txtproduct.setText("");
        txtproduct.requestFocus();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtcostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcostActionPerformed

    private void txtquantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtquantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtquantityActionPerformed

    private void txtbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbarActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        catagorie c = new catagorie();
        this.hide();
        c.setVisible(true);
        
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        brand c = new brand();
        this.hide();
        c.setVisible(true);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        product c = new product();
        this.hide();
        c.setVisible(true);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        vendor c = new vendor();
        this.hide();
        c.setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void txtpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpriceActionPerformed

    private void txtbrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbrandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbrandActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtbar;
    private javax.swing.JComboBox txtbrand;
    private javax.swing.JComboBox txtcategory;
    private javax.swing.JTextField txtcost;
    private javax.swing.JTextArea txtdescription;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtproduct;
    private javax.swing.JTextField txtquantity;
    private javax.swing.JComboBox<String> txtstatus;
    private javax.swing.JComboBox txtvendor;
    // End of variables declaration//GEN-END:variables
}
